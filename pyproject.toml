[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "agently-cli"
dynamic = ["version"]
description = "Declarative AI Agent Framework"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    {name = "Onward Platforms"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11"
]
dependencies = [
    "click",
    "semantic-kernel",
    "semantic-kernel[mcp]",
    "python-dotenv",
    "aiohttp",
    "jsonschema",
    "pyyaml",
    "requests",
    "typing-extensions",
    "agently-sdk",
    "azure-identity",
    "ollama",
    "mcp",
    "prompt_toolkit"
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-mock",
    "pytest-timeout"
]
dev = [
    "black",
    "flake8",
    "flake8-docstrings",
    "isort",
    "mypy",
    "pre-commit",
    "pydantic",
    "types-requests",
    "autoflake",
    "types-jsonschema",
    "types-PyYAML"
]

[project.scripts]
agently = "agently.cli.__main__:main"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["agently*"]

[tool.setuptools.package-data]
agently = ["config/*.json"]

[tool.setuptools_scm]
write_to = "agently/version.py"

[tool.black]
line-length = 100
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
